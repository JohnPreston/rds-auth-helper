Transform:
- AWS::Serverless-2016-10-31
Description: Template for function pgsql-auth-helper
Outputs:
  FunctionArn:
    Description: >-
      Lambda Function ARN
    Value: !GetAtt LambdaFunction.Arn
Parameters:
  AppSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
  VpcId:
    Type: AWS::EC2::VPC::Id
Resources:
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for sg-psql-auth-helper
      GroupName:
        Fn::Sub: psql-auth-helper-${AWS::StackName}
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
          FromPort: '-1'
          ToPort: '-1'
      VpcId:
        Ref: VpcId

  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      VpcConfig:
        SubnetIds: !Ref AppSubnetIds
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
      CodeUri: pgsql-auth-helper.zip
      AutoPublishAlias: live
      Handler: function.lambda_handler
      Layers:
        - arn:aws:lambda:eu-west-1:373709687836:layer:requests:1
        - arn:aws:lambda:eu-west-1:373709687836:layer:pg8000:1
      MemorySize: 256
      Role:
        Fn::GetAtt:
        - LambdaFunctionRole
        - Arn
      Runtime: python3.7
      Timeout: 30
      FunctionName:
        Ref: AWS::NoValue

  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
      - PolicyName: DecryptWithKmsAnyKey
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action: kms:Decrypt
            Effect: Allow
            Resource:
            - '*'
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - Fn::Sub: lambda.${AWS::URLSuffix}
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
